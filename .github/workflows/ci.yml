# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Docker push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      env:
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }} 
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }} 
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 
          DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }} 
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        ls -la
        cd data
        ls -la
        cd .. && cd api
        ls -la
        cd ..
        ls
        python manage.py migrate
    - name: Lint with flake8
      env:
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }} 
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }} 
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 
          DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }} 
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unittests
      env:
            TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }} 
            TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
            TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }} 
            TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 
            DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }} 
      run: |
        python manage.py test
        
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: docker login
        env:
            TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }} 
            TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
            TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }} 
            TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 
            DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }} 
            DOCKER_USER: ${{ secrets.DOCKER_USER }} 
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Container
        env:
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }} 
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }} 
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 
          DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }} 
        run: |
          docker build ./ -t 56548/emocial-api:latest --build-arg TWITTER_CONSUMER_KEY=${{ secrets.TWITTER_CONSUMER_KEY }} --build-arg TWITTER_CONSUMER_SECRET=${{ secrets.TWITTER_CONSUMER_SECRET }} --build-arg TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }} --build-arg TWITTER_ACCESS_TOKEN_SECRET=${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} --build-arg DJANGO_SECRET=${{ secrets.DJANGO_SECRET }} 
      - name: docker push
        run: |
          docker push 56548/emocial-api:latest
